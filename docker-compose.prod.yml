version: '3.7'

services:
  client:
    image: 2550705/nanolife-client:latest
    container_name: nanolife-client
    environment:
      - NODE_ENV=production
    ports:
      - "8080:8080"
    networks:
      app-network:
        aliases:
          - client

  server:
    image: 2550705/nanolife-server:latest
    container_name: nanolife-server
    env_file: ../.env
    environment:
      DATABASE_URL: $DATABASE_URL
      TYPEORM:
      REDIS_URL: $REDIS_URL
      NODE_ENV: production
      ENVIRONMENT: production
      TYPEORM_MIGRATIONS_DIR: migrations
      TYPEORM_URL: $DATABASE_URL
      TYPEORM_MIGRATIONS: migrations/*.ts
    ports:
      - "9000:9000"
    networks:
      app-network:
        aliases:
          - server
    links:
      - postgres:5432
    depends_on:
      - postgres
      - redis
    command: >
      /bin/bash wait-for-databases.sh

  postgres:
    image: postgres:11.2-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      app-network:
        aliases:
          - postgres

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379
    networks:
      app-network:
        aliases:
          - redis
    volumes:
      - redis-data:/data

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  redis-data:
